// Code generated by go-swagger; DO NOT EDIT.

package nokiaapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "nokia/models"
)

// PostAddOKCode is the HTTP code returned for type PostAddOK
const PostAddOKCode int = 200

/*PostAddOK status

swagger:response postAddOK
*/
type PostAddOK struct {

	/*
	  In: Body
	*/
	Payload *models.Status `json:"body,omitempty"`
}

// NewPostAddOK creates PostAddOK with default headers values
func NewPostAddOK() *PostAddOK {

	return &PostAddOK{}
}

// WithPayload adds the payload to the post add o k response
func (o *PostAddOK) WithPayload(payload *models.Status) *PostAddOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add o k response
func (o *PostAddOK) SetPayload(payload *models.Status) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostAddDefault Generic error response

swagger:response postAddDefault
*/
type PostAddDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAddDefault creates PostAddDefault with default headers values
func NewPostAddDefault(code int) *PostAddDefault {
	if code <= 0 {
		code = 500
	}

	return &PostAddDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post add default response
func (o *PostAddDefault) WithStatusCode(code int) *PostAddDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post add default response
func (o *PostAddDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post add default response
func (o *PostAddDefault) WithPayload(payload *models.Error) *PostAddDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add default response
func (o *PostAddDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
